{"version":3,"sources":["components/Cinemagraph.tsx","data.ts","App.tsx","components/MainMenu.tsx","preloadMedia.ts","serviceWorker.ts","index.tsx"],"names":["Cinemagraph","videoRef","React","audioRef","bgAudioRef","ctx","window","AudioContext","webkitAudioContext","sourceNode","_this","createBufferSource","lastPauseTime","Date","_this2","this","current","addEventListener","props","onComplete","newProps","paused","getTime","load","play","pause","media","_this3","console","log","classList","add","setTimeout","remove","loadVideo","callback","name","setState","video","src","dialog","bgaudio","hasBg","createMediaElementSource","connect","destination","audio","react","className","autoPlay","loop","muted","playsInline","ref","type","videoType","silent","PlayState","data","ignore","text","noAudio","MainMenu","react_default","a","createElement","Cinemagraph_Cinemagraph","id","href","target","onClick","onStart","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","playerRef","createRef","progressBarRef","cache","startGame","playState","NotStarted","index","nextIndex","clickedNext","Levels","state","Complete","fadeTransition","fadeOut","startIndex","undefined","length","stopAudio","loaded","loadingProgress","resizeViewport","vh","innerHeight","document","documentElement","style","setProperty","concat","onProgressUpdate","completedCount","totalCount","videoExtension","canPlayType","fetchURL","url","fetch","mode","then","f","r","blob","URL","createObjectURL","catch","e","promises","map","m","source","sources","Promise","all","results","promise","foo","percent","Math","floor","entries","forEach","preloadMedia","value","max","next","dangerouslySetInnerHTML","__html","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82b63022.chunk.js","sourcesContent":["import * as React from 'react'\nimport { CacheEntry } from '../preloadMedia';\n\ninterface Props {\n  media: CacheEntry\n  onComplete?: () => void\n  silent?: boolean\n}\n\nexport default class Cinemagraph extends React.Component<Props> {\n  private videoRef = React.createRef<HTMLVideoElement>()\n  private audioRef = React.createRef<HTMLAudioElement>()\n  private bgAudioRef = React.createRef<HTMLAudioElement>()\n\n  private ctx = new (window.AudioContext || (window as any).webkitAudioContext)()\n  private sourceNode = this.ctx.createBufferSource()\n\n  private lastPauseTime = new Date()\n\n  componentDidMount() {\n    if (!this.audioRef.current) { return }\n    this.audioRef.current.addEventListener('ended', () => {\n      if (this.props.onComplete) { this.props.onComplete() }\n    })\n  }\n\n  shouldComponentUpdate(newProps: Props) {\n    // lol\n    return false\n  }\n\n  public playIfNotPlaying() {\n    if (!this.audioRef.current) { return }\n    if (!this.audioRef.current.paused) return\n\n    const timeDiff = new Date().getTime() - this.lastPauseTime.getTime()\n    if (timeDiff > 5000) {\n      this.audioRef.current.load()\n    }\n    this.audioRef.current.play()\n  }\n\n  public pause() {\n    if (!this.audioRef.current) { return }\n    this.lastPauseTime = new Date()\n    this.audioRef.current.pause()\n  }\n\n  public fadeTransition(media: CacheEntry) {\n    console.log(\"Fading\")\n    if (!this.videoRef.current) return\n\n    this.videoRef.current.classList.add('fade')\n\n    setTimeout(() => {\n      this.videoRef.current!.classList.remove('fade')\n    }, 600)\n\n    setTimeout(() => {\n      this.loadVideo(media)\n    }, 600)\n  }\n\n  public fadeOut(callback: (() => void)) {\n    if (!this.videoRef.current) {\n      return callback()\n    }\n\n    this.videoRef.current.classList.add('fade')\n    setTimeout(callback, 600)\n  }\n\n  public loadVideo(media: CacheEntry) {\n    console.log(\"Loading video\", media.name)\n    this.setState({ media })\n\n    if (this.videoRef.current && media) {\n      if (media.video) {\n        this.videoRef.current.src = media.video\n        this.videoRef.current.load()\n      } else {\n        this.videoRef.current.src = \"broken\"\n      }\n    }\n\n    if (this.audioRef.current) {\n      if (media.dialog) {\n        console.log(\"Has dialog!\")\n        this.audioRef.current.src = media.dialog\n        this.audioRef.current.load()\n      } else {\n        this.audioRef.current.src = \"broken\"\n      }\n    }\n\n    if (this.bgAudioRef.current) {\n      if (media.bgaudio && media.hasBg) {\n        this.bgAudioRef.current.src = media.bgaudio\n        this.bgAudioRef.current.load()\n        if (window.AudioContext) {\n          const src = this.ctx.createMediaElementSource(this.bgAudioRef.current)\n          src.connect(this.ctx.destination)\n        }\n      } else {\n        this.bgAudioRef.current.src = \"broken\"\n      }\n    }\n  }\n\n\n\n  render() {\n    let video, audio;\n\n    if (this.props.media.video) {\n      video = (\n        <video className='cinemagraph' autoPlay loop muted playsInline ref={this.videoRef}>\n          <source src={this.props.media.video} type={this.props.media.videoType}></source>\n        </video>\n      )\n    } else {\n      video = <video className='cinemagraph' autoPlay loop muted playsInline ref={this.videoRef} />\n    }\n\n    if (!this.props.silent) {\n      audio = (\n        <div>\n          <audio autoPlay loop ref={this.bgAudioRef} />\n          <audio autoPlay ref={this.audioRef} />\n        </div>\n      )\n    }\n\n\n    return (\n      <div>\n        {video}\n        {audio}\n      </div>\n    )\n  }\n}","export interface Media {\n  name: string\n  text?: string\n  noAudio?: boolean\n  hasBg?: boolean\n  ignore?: boolean\n}\n\nconst data: Media[] = [\n  {\n    name: \"title\",\n    ignore: true\n  },\n  {\n    name: \"headphones\",\n    text: \"this experience requires sound.\",\n    noAudio: true\n  },\n  {\n    name: \"bed\",\n  },\n  {\n    name: \"shower\",\n  },\n  {\n    name: \"street\",\n  },\n  {\n    name: \"parks\",\n  },\n  {\n    name: \"plaque\",\n  },\n  {\n    name: \"garbagedump\"\n  },\n  {\n    name: \"slide\",\n  },\n  {\n    name: \"bench\",\n  },\n  {\n    name: \"fountain\",\n  },\n  {\n    name: \"drugdealers\",\n  },\n  {\n    name: \"dolores\",\n  },\n  {\n    name: \"urethra\",\n  },\n  {\n    name: \"forest\",\n  },\n  {\n    name: \"forest2\",\n    noAudio: true\n  },\n  {\n    name: \"canal\",\n  },\n  {\n    name: \"slidetop\",\n  },\n  {\n    name: \"poem\",\n  }\n]\n\nexport default data","import React, { Component, SyntheticEvent } from 'react';\nimport './App.css';\nimport Cinemagraph from './components/Cinemagraph';\nimport preloadMedia, { CacheEntry } from './preloadMedia';\n\nimport Levels from './data'\nimport MainMenu from './components/MainMenu';\n\nenum PlayState {\n  NotStarted = 0,\n  Playing = 1,\n  Complete = 2,\n  MainMenu\n}\n\ninterface State {\n  index: number\n  playState: PlayState\n  loaded: boolean\n  loadingProgress: number\n}\n\nclass App extends Component<{}, State> {\n  private playerRef = React.createRef<Cinemagraph>()\n  private progressBarRef = React.createRef<HTMLProgressElement>()\n\n  private cache: { [name: string]: CacheEntry } = {}\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      index: -1,\n      playState: PlayState.MainMenu,\n      loaded: false,\n      loadingProgress: 0\n    }\n  }\n\n  componentDidMount() {\n    // Mobile viewport sizing hack from https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n    function resizeViewport() {\n      const vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n    window.addEventListener('resize', resizeViewport)\n    resizeViewport()\n\n    window.addEventListener('keypress', this.clickedNext)\n\n    preloadMedia(Levels, (percent) => {\n      if (this.progressBarRef.current) {\n        this.progressBarRef.current.value = percent\n      }\n    }).then(cache => {\n      this.cache = cache\n      this.setState({ loaded: true })\n\n      const video = Levels[0]\n      const media = this.cache[video.name]\n    })\n  }\n\n  render() {\n    console.log(\"Re-rendering\")\n\n    if (!this.state.loaded) {\n      return (\n        <div className=\"App\" >\n          <div className=\"video-wrapper\">\n            <div>loading!</div>\n            <progress ref={this.progressBarRef} value={this.state.loadingProgress} max=\"100\" />\n          </div>\n        </div >\n      )\n    }\n\n    if (this.state.playState === PlayState.MainMenu) {\n      return (\n        <div className=\"App\" >\n          <div className=\"video-wrapper\">\n            <MainMenu\n              onStart={this.startGame}\n              media={this.cache[\"title\"]}\n            />\n          </div>\n        </div>\n      )\n    }\n\n    const video = Levels[this.state.index]\n\n    const next = <div id='next-wrapper'\n      className={(video.noAudio || this.state.playState === PlayState.Complete) ? \"visible\" : \"hidden\"}\n    >\n      <div id='next' onClick={this.clickedNext}\n      >→</div>\n    </div >\n\n    let text;\n    if (video.text) {\n      text = <div className='text' dangerouslySetInnerHTML={{ __html: video.text }} />\n    }\n\n    return (\n      <div className=\"App\" >\n        <div className=\"video-wrapper\">\n          <Cinemagraph\n            media={this.cache[video.name]}\n            ref={this.playerRef}\n            onComplete={this.onComplete}>\n          </Cinemagraph >\n          {text}\n          {next}\n        </div>\n      </div >\n    );\n  }\n\n  startGame = () => {\n    this.setState({ playState: PlayState.NotStarted, index: this.nextIndex(0)! })\n  }\n\n  clickedNext = () => {\n    const canContinue = Levels[this.state.index].noAudio || this.state.playState === PlayState.Complete\n    if (!canContinue) return\n\n    const index = this.nextIndex()\n    if (!index) {\n      if (this.playerRef.current) {\n        this.playerRef.current.fadeOut(() => {\n          this.setState({ index: 0, playState: PlayState.MainMenu })\n        })\n      }\n      return\n    }\n\n    this.setState({ index, playState: PlayState.NotStarted })\n\n    const video = Levels[index]\n    const media = this.cache[video.name]\n\n    if (this.playerRef.current) {\n      this.playerRef.current.fadeTransition(media)\n    }\n  }\n\n  nextIndex = (startIndex?: number): number | undefined => {\n    let index = (startIndex === undefined ? this.state.index : startIndex) + 1\n\n    while (Levels[index] && Levels[index].ignore) {\n      index += 1\n    }\n\n    if (index >= Levels.length) {\n      return undefined\n    }\n\n    return index\n  }\n\n  stopAudio = () => {\n    if (!this.playerRef.current) { return }\n    this.playerRef.current.pause()\n  }\n\n  onComplete = () => {\n    console.log(\"Is complete!\")\n    this.setState({ playState: PlayState.Complete })\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport { CacheEntry } from '../preloadMedia';\nimport Cinemagraph from './Cinemagraph';\n\ninterface Props {\n  onStart: (() => void)\n  media: CacheEntry\n}\n\nexport default (props: Props) => {\n  return <div>\n    <Cinemagraph media={props.media} silent />\n    <div id='menu'>\n      <h1>Görli</h1>\n      <p>by <a href=\"https://lazerwalker.com\" target=\"_blank\">@lazerwalker</a></p>\n      <p>made for <a href=\"https://itch.io/jam/flatjam2018/\" target=\"_blank\">flatjam 2018</a></p>\n      <button id='start' onClick={props.onStart}>\n        <div id=\"play-icon\" />\n      </button>\n    </div>\n  </div>\n}","import { Media } from \"./data\";\n\ninterface VideoSource {\n  bgaudio: string\n  dialog: string\n  name: string\n  video: string\n  hasBg: boolean\n  videoType: string\n}\n\nexport interface CacheEntry {\n  name: string\n  bgaudio: string | void\n  dialog: string | void\n  video: string | void\n  hasBg: boolean\n  videoType: string\n}\n\nexport default function preloadMedia(media: Media[], onProgressUpdate: (percent: number) => void): Promise<{ [name: string]: CacheEntry }> {\n  // TODO: This can be more granular than just tracking each level of the game \n  let completedCount = 0\n  let totalCount = media.length\n  function wrapPromise<T>(promise: Promise<T>): Promise<T> {\n    return promise.then(foo => {\n      completedCount += 1\n      const percent = Math.floor((completedCount / totalCount) * 100)\n      onProgressUpdate(percent)\n      return foo\n    })\n  }\n\n  const videoEl = document.createElement('video')\n  const supportsWebm = (videoEl.canPlayType('video/webm') != '')\n  const videoExtension = (supportsWebm ? \"webm\" : \"mp4\")\n  const videoType = `video/${videoExtension}`\n\n  let sources: VideoSource[] = media.map((m) => {\n    return {\n      bgaudio: `bgaudio/${m.name}.mp3`,\n      dialog: `dialog/${m.name}.mp3`,\n      name: m.name,\n      video: `cinemagraphs/${m.name}.${videoExtension}`,\n      hasBg: m.hasBg || false,\n      videoType\n    }\n  })\n\n  function fetchURL(url: string): Promise<string | void> {\n    return fetch(url, { mode: \"cors\" })\n      .then(f => { console.log('fetched!', f); return f })\n      .then(r => r.blob())\n      .then(URL.createObjectURL)\n      .catch(e => console.log(`Couldn't load ${url}, ${e}`))\n  }\n\n  let promises: Promise<CacheEntry>[] = sources.map(source => {\n    const sources = [source.bgaudio, source.dialog, source.video]\n    return Promise.all(sources.map(fetchURL)).then(results => {\n      return {\n        bgaudio: results[0],\n        dialog: results[1],\n        name: source.name,\n        video: results[2],\n        hasBg: source.hasBg, // gets looped in in App.tsx. TODO: Move that logic here.\n        videoType: source.videoType\n      }\n    })\n  })\n\n  return Promise.all(promises.map(wrapPromise)).then(entries => {\n    let map: { [name: string]: CacheEntry } = {}\n    entries.forEach(e => {\n      map[e.name] = e\n    })\n    return map\n  })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}